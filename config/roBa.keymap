#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE          &kp W             &kp E         &kp R    &kp T                                                  &kp Y       &kp U  &kp I     &kp O     &kp BACKSPACE
&kp A               &kp S             &kp D         &kp F    &kp G       &kp LS(LG(S))               &lt 4 AT_SIGN  &kp H       &kp J  &kp K     &kp L     &kp ENTER
&mt LEFT_SHIFT Z    &kp X             &kp C         &kp V    &kp B       &kp COMMA                   &kp PERIOD     &kp N       &kp M  &mkp MB1  &mkp MB2  &mt RSHIFT SLASH
&mt LEFT_COMMAND Q  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp TAB  &lt 3 LCMD  &lt_to_layer_0 1 SPACE      &lt 2 SPACE    &lt 3 RCMD                             &mt RIGHT_COMMAND P
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR     &kp PERCENT                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS      &kp EQUAL   &kp DEL
&trans           &trans       &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &trans      &kp F13  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SEMICOLON  &kp SQT     &kp ENTER
&kp LEFT_SHIFT   &trans       &trans     &trans         &trans        &trans      &trans   &kp NON_US_BACKSLASH  &kp TILDE              &kp COMMA      &kp PERIOD  &mt RIGHT_SHIFT SLASH
&trans           &trans       &trans     &trans         &trans        &trans      &trans   &trans                                                                  &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS  &kp N7        &kp N8        &kp N9        &kp PLUS                                                &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp BACKSPACE
&kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COLON  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&kp SLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA  &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&kp N0     &kp N0        &trans        &trans        &trans     &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp LC(UP_ARROW)  &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp LC(RIGHT_ARROW)  &kp LC(DOWN_ARROW)                            &kp RC(UP_ARROW)  &kp RC(LEFT_ARROW)      &kp UP_ARROW   &kp RC(RIGHT_ARROW)      &kp RC(DOWN_ARROW)
&kp HOME          &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp END             &trans         &trans     &kp HOME          &kp RC(RA(LEFT_ARROW))  &kp RA(RC(F))  &kp RC(RA(RIGHT_ARROW))  &kp END
&trans            &trans              &trans          &trans               &trans              &kp LG(L)      &kp RG(L)  &trans            &trans                  &trans         &trans                   &trans
&trans            &trans              &trans          &trans               &trans              &trans         &trans     &trans                                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans          &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans          &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &kp LS(LG(N3))  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans          &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                          &trans
            >;
        };
    };
};
